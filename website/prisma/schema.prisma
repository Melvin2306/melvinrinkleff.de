generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model Education {
  id          Int    @id @default(autoincrement())
  institution String
  degree      String
  period      String
  location    String
  url         String
  userId      Int?
  user        User?  @relation(fields: [userId], references: [id])
}

model Course {
  id          Int    @id @default(autoincrement())
  name        String
  institution String
  period      String
  location    String
  url         String
  userId      Int?
  user        User?  @relation(fields: [userId], references: [id])
}

model Experience {
  id       Int    @id @default(autoincrement())
  company  String
  position String
  period   String
  location String
  url      String
  userId   Int?
  user     User?  @relation(fields: [userId], references: [id])
}

model Voluntary {
  id           Int    @id @default(autoincrement())
  organization String
  position     String
  period       String
  location     String
  url          String
  userId       Int?
  user         User?  @relation(fields: [userId], references: [id])
}

model Project {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  url         String
  userId      Int?
  user        User?  @relation(fields: [userId], references: [id])
}

model Skill {
  id     Int    @id @default(autoincrement())
  name   String
  userId Int?
  user   User?  @relation(fields: [userId], references: [id])
}

model Language {
  id     Int    @id @default(autoincrement())
  name   String
  userId Int?
  user   User?  @relation(fields: [userId], references: [id])
}

model Tool {
  id     Int    @id @default(autoincrement())
  name   String
  userId Int?
  user   User?  @relation(fields: [userId], references: [id])
}

model Social {
  id     Int    @id @default(autoincrement())
  name   String
  url    String
  userId Int?
  user   User?  @relation(fields: [userId], references: [id])
}

model User {
  name       String?
  email      String?      @unique
  createdAt  DateTime     @default(now()) @map("created_at")
  updatedAt  DateTime     @updatedAt @map("updated_at")
  id         Int          @id @default(autoincrement())
  Course     Course[]
  Education  Education[]
  Experience Experience[]
  Language   Language[]
  Project    Project[]
  Skill      Skill[]
  Social     Social[]
  Tool       Tool[]
  Voluntary  Voluntary[]

  @@map("users")
}
